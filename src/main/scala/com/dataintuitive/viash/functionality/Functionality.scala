package com.dataintuitive.viash.functionality

import scala.io.Source
import io.circe.yaml.parser
import java.nio.file.Paths
import java.io.File
import platforms._

case class Functionality(
  name: String,
  description: Option[String],
  platform: Platform,
  resources: List[Resource],
  ftype: Option[String],
  arguments: List[DataObject[_]] = Nil,
  private var _rootDir: Option[File] = None // :/
) {
  def mainResource =
    resources.find(_.name.startsWith("main"))

  def rootDir = {
    _rootDir match {
      case Some(f) => f
      case None => throw new RuntimeException("root directory of functionality object has not been defined yet")
    }
  }
  def rootDir_= (newValue: File) = {
    _rootDir =
      if (newValue.isFile()) {
        Some(newValue.getParentFile())
      } else {
        Some(newValue)
      }
  }

  def mainCode: Option[String] = {
    if (platform == NativePlatform || mainResource.isEmpty) {
      None
    } else if (mainResource.get.code.isDefined) {
      mainResource.get.code
    } else {
      val mainPath = Paths.get(rootDir.getPath(), mainResource.get.path.get).toFile()
      Some(Source.fromFile(mainPath).mkString(""))
    }
  }

  def mainCodeWithArgParse = {
    mainCode.map(code =>
      platform match {
        case NativePlatform => code
        case pl => {
          val lines = code.split("\n")

          val startIndex = lines.indexWhere(_.contains("VIASH START"))
          val endIndex = lines.indexWhere(_.contains("VIASH END"))

          if (startIndex >= 0 && endIndex >= 0) {
            val li =
              lines.slice(0, startIndex + 1) ++
              Array(
                pl.commentStr + " The following code has been auto-generated by Portash.",
                pl.generateArgparse(this)
              ) ++
              lines.slice(endIndex, lines.length)

            li.mkString("\n")
          } else {
            code
          }
//          val regex = s"""
//            |${pl.commentStr}[^\n]*VIASH START.*
//            |${pl.commentStr}[^\n]*VIASH END[^\n]*
//            |""".stripMargin
//          val replace = s"""
//            |${pl.commentStr} VIASH START
//            |${pl.commentStr} The following code has been auto-generated by Portash.
//            |${pl.generateArgparse(this)}
//            |${pl.commentStr} VIASH END
//            |""".stripMargin
//
//          import java.util.regex.Pattern
//          Pattern.compile(regex, Pattern.DOTALL)
//            .matcher(code)
//            .replaceAll(replace)
        }
      }
    )

  }
}

object Functionality {
  def parse(file: java.io.File): Functionality = {
    val str = Source.fromFile(file).mkString
    val fun = parser.parse(str)
      .fold(throw _, _.as[Functionality])
      .fold(throw _, identity)

    // save root directory of Functionality object
    fun.rootDir = file

    require(
      fun.resources.count(_.name.startsWith("main")) == 1,
      message = "Define exactly one resource whose name begins with 'main'."
    )

    fun
  }
}
